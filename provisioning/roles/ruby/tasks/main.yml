--- 
- name: "Rails: Depdendencies present"
  apt: pkg={{ item }} state=latest install_recommends=no
  with_items:
    - sqlite3
    - libsqlite3-dev
    - nodejs # For execjs: https://github.com/sstephenson/execjs

- name: 'rbenv: Update git repo'
  git: repo=git://github.com/sstephenson/rbenv.git dest={{ rbenv_root }} version={{ rbenv_version }}

- name: 'rbenv: Permissions set' 
  # If left as root, rehash will always fail with: 
  # rbenv: cannot rehash: /usr/local/rbenv/shims/.rbenv-shim exists
  file: path={{ rbenv_root }}/shims/ mode=0777 state=directory

- name: 'rbenv: Present in PATH'
  file: path=/usr/local/bin/rbenv src={{ rbenv_root }}/bin/rbenv state=link

- name: 'rbenv: Add initialization to profile'
  template: src=rbenv.sh.j2 dest=/etc/profile.d/rbenv.sh owner=root group=root mode=0755

- name: 'ruby-build: Present'
  shell: "[ -f /usr/local/bin/ruby-build ] && echo 'Found' || echo ''"
  register: rbuild_present
  ignore_errors: yes

- name: 'ruby-build: Pre-install - Create temporary directory'
  command: mktemp -d 
  register: tempdir
  when: (not rbuild_present.stdout)

- name: 'ruby-build: Pre-install - Clone git repo'
  git: repo=git://github.com/sstephenson/ruby-build.git dest={{ tempdir.stdout }}/ruby-build 
  when: (not rbuild_present.stdout)

- name: 'ruby-build: Install'
  command: ./install.sh chdir={{ tempdir.stdout }}/ruby-build
  when: (not rbuild_present.stdout)

- name: 'ruby-build: Post-install - Remove temporary directory'
  file: path={{ tempdir.stdout }} state=absent 
  when: (not rbuild_present.stdout)

- name: 'Ruby {{ ruby_version }}: Present'
  shell: RBENV_ROOT={{ rbenv_root }} rbenv versions | grep {{ ruby_version }}
  register: ruby_installed
  ignore_errors: yes

- name: 'Ruby {{ ruby_version }}: Install'
  shell: RBENV_ROOT={{ rbenv_root }} rbenv install {{ ruby_version }}
  when: (not ruby_installed.stdout)

- name: 'rbenv: Set Ruby {{ ruby_version }} as global default'
  shell: RBENV_ROOT={{ rbenv_root }} rbenv global {{ ruby_version }}
  notify: 'Rehash rbenv'
  when: (not ruby_installed.stdout)

- name: 'rbenv: Custom gemrc present'
  copy: src=gemrc dest=/root/.gemrc owner=root group=root mode=0644

- name: 'RubyGems: Present in PATH' # Makes Ansible happier 
  file: path=/usr/local/bin/gem src=/usr/local/rbenv/shims/gem state=link

- name: 'RubyGems: Update'
  command: 'gem update --system'

- name: 'Rake: Present'
  # Without force, this will hang waiting for permission to overwrite the existing executable.
  command: 'sudo gem install rake --force'
  notify: 'Rehash rbenv'
  tags: ruby

- name: 'Bundler: Present'
  gem: name=bundler version={{ bundler_version }} state=present
       user_install=no # Because otherwise it doesn't end up where rbenv expects it
  notify: 'Rehash rbenv'
  tags: ruby

- name: 'Bundler: ~/.bundle/config Present' 
  file: path=/home/vagrant/.bundle/ state=directory

- name: 'Bundler: Custom .bundle/config present'
  copy: src=bundle.config dest=/home/vagrant/.bundle/config 

- name: 'Rails: Present'
  gem: name=rails version={{ rails_version }} state=present
       user_install=no # Because otherwise it doesn't end up where rbenv expects it
  notify: 'Rehash rbenv'
  tags: ruby
